#!/usr/bin/env ruby

# A few helpful tips about the Rules file:
#
# * The string given to #compile and #route are matching patterns for
#   identifiers--not for paths. Therefore, you can’t match on extension.
#
# * The order of rules is important: for each item, only the first matching
#   rule is applied.
#
# * Item identifiers start and end with a slash (e.g. “/about/” for the file
#   “content/about.html”). To select all children, grandchildren, … of an
#   item, use the pattern “/about/*/”; “/about/*” will also select the parent,
#   because “*” matches zero or more characters.

require 'nanoc-gzip-filter'

compile %r{/(images|script|style)/*/} do
  # don’t filter or layout images, scripts, or stylesheets
end

route %r{/(script|style)/*/} do
  # don't output scripts or styles anywhere as we'll combine them later on
  nil
end

# combine all stylesheets and scripts into one file, for performance

compile '/_scripts/' do
  filter :haml
  filter :yui_compressor, :type => 'js'
  filter :gzip
end

compile '/_styles/' do
  filter :haml
  filter :yui_compressor, :type => 'css'
  filter :gzip
end

route '/_scripts/' do
  all_scripts_combined_filename
end

route '/_styles/' do
  all_styles_combined_filename
end

compile '*' do
  if item.binary?
    # don’t filter binary items
  else
    filter :haml, :format => :html4
    layout 'default'
    filter :minify_html
    filter :gzip
  end
end

route '*' do
  if item.binary?
    # Write item with identifier /foo/ to /foo.ext
    item.identifier.chop + '.' + item[:extension]
  else
    # Write item with identifier /foo/ to /foo/index.html
    item.identifier + 'index.html'
  end
end

layout '*', :haml, :format => :html4
